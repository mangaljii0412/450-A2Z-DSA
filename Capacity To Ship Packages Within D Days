class Solution {
public:

    bool ispossible(vector<int>& weights , int mid , int days){
        int n = weights.size();
        int sum = 0;
        int count = 1;
        for(int i = 0 ; i < n ; i++){
            sum += weights[i];
            if(sum > mid) {
                count++;
                sum = weights[i];
            }
        }
        cout<<count<<endl;
        if(count <= days) return true;
        return false;;
    }
    int shipWithinDays(vector<int>& weights, int days) {
        int start = *max_element(weights.begin(),weights.end());
        int end = 0;
        int ans;
        for(auto it : weights) end += it;
        while(start <= end){
            int mid = start + (end-start)/2;
            if(ispossible(weights , mid , days)){
                ans = mid;
                end = mid-1;
            }
            else start = mid+1;
        }
        return ans;
    }
};
