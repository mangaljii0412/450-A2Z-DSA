class Solution {

int firstoccurance(vector<int>& arr,int target)
{
    int s = 0;
    int e = arr.size()-1;
    int ans = -1;
    while(s<=e)
    {
        int mid = s + (e-s)/2;
        if(arr[mid]==target)
        {
            ans = mid;
            e = mid-1;
        }
        else if(arr[mid]<target)
        {
            s=mid+1;
        }
        else
        {
            e = mid-1;
        }
    }
    return ans;
}
int lastoccurance(vector<int>& arr,int target)
{
    int s = 0;
    int e = arr.size()-1;
    int ans = -1;
    while(s<=e)
    {
        int mid = s + (e-s)/2;
        if(arr[mid]==target)
        {
            ans = mid;
            s = mid+1;
        }
        else if(arr[mid]<target)
        {
            s=mid+1;
        }
        else
        {
            e = mid-1;
        }
    }
    return ans;
}
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> arr1;
        arr1.push_back(firstoccurance(nums , target));
        arr1.push_back(lastoccurance(nums , target));
    return arr1;
    }
    
};
