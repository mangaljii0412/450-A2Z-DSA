class Solution {
public:

    int findMax(vector<int> &piles){
        int maxi = INT_MIN;
        for(int i = 0 ; i < piles.size() ; i++){
            maxi = max(maxi , piles[i]);
        }
        return maxi;
    }

    int calculatehour(int hours , vector<int> &piles){
        int totalhour = 0;
        for(int i = 0 ; i < piles.size() ; i++){
            totalhour += ceil((double)piles[i] / (double)hours);
        }
        return totalhour;
    }
    int minEatingSpeed(vector<int>& piles, int h) {
        long long int low = 1, high = findMax(piles);
        if(h == 1000000000) return piles.size();

        int ans ;
        while(low <= high){
            int mid = low + (high - low)/2;
            long long  totalhrs = calculatehour(mid,piles);
            if(totalhrs <= h) {
                ans = mid;
                high = mid-1;
            }
            else low = mid+1;
        }
        return ans;
    }
};
