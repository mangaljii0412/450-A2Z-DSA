int getpivot(vector<int> &arr , int n){
    int start = 0 ;
    int end = n-1;
    while(start < end){
        int mid = start + (end-start)/2;
        if(arr[mid] >= arr[0]) start = mid+1;
        else end = mid;
    }
    return start;
}

int BinarySearch(vector<int> &arr , int start , int end , int target){
    while(start <= end){
        int mid = start + (end-start)/2;
        if(arr[mid] == target) return mid;
        else if(arr[mid] < target) start = mid+1;
        else end = mid-1;
    }
    return -1;
}
int search(vector<int>& arr, int n, int k)
{
    int ans;
    int pivot = getpivot(arr,n);
    if(arr[pivot] <= k && arr[n-1] >= k){
        return BinarySearch(arr , pivot , n-1 , k);
    }
    else{
        return BinarySearch(arr , 0 , pivot-1 , k);
    }
    // return ans;
}
