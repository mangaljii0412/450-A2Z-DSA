#include<bits/stdc++.h>
int solve(int index , int k , vector<int> &height , vector<int> &dp){
    if(index == 0) return 0;
    if(dp[index] != -1) return dp[index];
    int minsteps = INT_MAX;
    for(int i = 1 ; i <= k ;i++){
        if((index-i) >= 0){
            int jump = solve(index-i,k,height,dp) + abs(height[index] - height[index-i]);
            minsteps = min(minsteps , jump);
        }
    }
    return dp[index] = minsteps;
}

int minimizeCost(int n, int k, vector<int> &height){
    vector<int> dp(n+1,-1);
    return solve(n-1 , k , height , dp);
}
